import 'bloc/notification_settings_bloc.dart';import 'models/notification_settings_model.dart';import 'package:baburam_s_application5/core/app_export.dart';import 'package:baburam_s_application5/widgets/app_bar/appbar_image.dart';import 'package:baburam_s_application5/widgets/app_bar/appbar_title.dart';import 'package:baburam_s_application5/widgets/app_bar/custom_app_bar.dart';import 'package:baburam_s_application5/widgets/custom_switch.dart';import 'package:flutter/material.dart';class NotificationSettingsScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<NotificationSettingsBloc>(create: (context) => NotificationSettingsBloc(NotificationSettingsState(notificationSettingsModelObj: NotificationSettingsModel()))..add(NotificationSettingsInitialEvent()), child: NotificationSettingsScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray900, appBar: CustomAppBar(height: getVerticalSize(48), leadingWidth: 52, leading: AppbarImage(height: getSize(28), width: getSize(28), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 24, top: 10, bottom: 10), onTap: () {onTapArrowleft21(context);}), title: AppbarTitle(text: "lbl_notifications".tr, margin: getMargin(left: 16))), body: Container(width: double.maxFinite, padding: getPadding(left: 24, top: 32, right: 24, bottom: 32), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(bottom: 1), child: Text("msg_general_notific".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold18.copyWith(letterSpacing: getHorizontalSize(0.2)))), BlocSelector<NotificationSettingsBloc, NotificationSettingsState, bool?>(selector: (state) => state.isSelectedSwitch, builder: (context, isSelectedSwitch) {return CustomSwitch(value: isSelectedSwitch, onChanged: (value) {context.read<NotificationSettingsBloc>().add(ChangeSwitchEvent(value: value));});})]), Padding(padding: getPadding(top: 31), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(bottom: 1), child: Text("lbl_sound".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold18.copyWith(letterSpacing: getHorizontalSize(0.2)))), BlocSelector<NotificationSettingsBloc, NotificationSettingsState, bool?>(selector: (state) => state.isSelectedSwitch1, builder: (context, isSelectedSwitch1) {return CustomSwitch(value: isSelectedSwitch1, onChanged: (value) {context.read<NotificationSettingsBloc>().add(ChangeSwitch1Event(value: value));});})])), Padding(padding: getPadding(top: 31), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(bottom: 1), child: Text("lbl_vibrate".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold18.copyWith(letterSpacing: getHorizontalSize(0.2)))), BlocSelector<NotificationSettingsBloc, NotificationSettingsState, bool?>(selector: (state) => state.isSelectedSwitch2, builder: (context, isSelectedSwitch2) {return CustomSwitch(value: isSelectedSwitch2, onChanged: (value) {context.read<NotificationSettingsBloc>().add(ChangeSwitch2Event(value: value));});})])), Padding(padding: getPadding(top: 31), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 3), child: Text("lbl_app_updates".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold18.copyWith(letterSpacing: getHorizontalSize(0.2)))), BlocSelector<NotificationSettingsBloc, NotificationSettingsState, bool?>(selector: (state) => state.isSelectedSwitch3, builder: (context, isSelectedSwitch3) {return CustomSwitch(margin: getMargin(bottom: 1), value: isSelectedSwitch3, onChanged: (value) {context.read<NotificationSettingsBloc>().add(ChangeSwitch3Event(value: value));});})])), Padding(padding: getPadding(top: 30), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(bottom: 1), child: Text("msg_new_service_ava".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold18.copyWith(letterSpacing: getHorizontalSize(0.2)))), BlocSelector<NotificationSettingsBloc, NotificationSettingsState, bool?>(selector: (state) => state.isSelectedSwitch4, builder: (context, isSelectedSwitch4) {return CustomSwitch(value: isSelectedSwitch4, onChanged: (value) {context.read<NotificationSettingsBloc>().add(ChangeSwitch4Event(value: value));});})])), Padding(padding: getPadding(top: 31, bottom: 5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 3), child: Text("msg_new_tips_availa".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold18.copyWith(letterSpacing: getHorizontalSize(0.2)))), BlocSelector<NotificationSettingsBloc, NotificationSettingsState, bool?>(selector: (state) => state.isSelectedSwitch5, builder: (context, isSelectedSwitch5) {return CustomSwitch(margin: getMargin(bottom: 1), value: isSelectedSwitch5, onChanged: (value) {context.read<NotificationSettingsBloc>().add(ChangeSwitch5Event(value: value));});})]))])))); } 
onTapArrowleft21(BuildContext context) { NavigatorService.goBack(); } 
 }
