import '../search_page/widgets/listrectanglefour2_item_widget.dart';import '../search_page/widgets/listsizemediumtypef_item_widget.dart';import 'bloc/search_bloc.dart';import 'models/listrectanglefour2_item_model.dart';import 'models/listsizemediumtypef_item_model.dart';import 'models/search_model.dart';import 'package:baburam_s_application5/core/app_export.dart';import 'package:baburam_s_application5/widgets/custom_search_view.dart';import 'package:flutter/material.dart';class SearchPage extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<SearchBloc>(create: (context) => SearchBloc(SearchState(searchModelObj: SearchModel()))..add(SearchInitialEvent()), child: SearchPage()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray900, resizeToAvoidBottomInset: false, body: Container(width: double.maxFinite, decoration: AppDecoration.fillGray900, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Column(mainAxisAlignment: MainAxisAlignment.start, children: [BlocSelector<SearchBloc, SearchState, TextEditingController?>(selector: (state) => state.searchbarController, builder: (context, searchbarController) {return CustomSearchView(focusNode: FocusNode(), controller: searchbarController, hintText: "lbl_search".tr, margin: getMargin(left: 24, top: 24, right: 24), prefix: Container(margin: getMargin(left: 20, top: 18, right: 12, bottom: 18), child: CustomImageView(svgPath: ImageConstant.imgSearch)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(56)), suffix: Container(margin: getMargin(left: 30, top: 21, right: 23, bottom: 21), decoration: BoxDecoration(border: Border.all(color: ColorConstant.cyan60001, width: getHorizontalSize(1), strokeAlign: strokeAlignCenter)), child: CustomImageView(svgPath: ImageConstant.imgMenuCyan60001)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(56)));}), Align(alignment: Alignment.centerRight, child: Container(height: getVerticalSize(62), child: BlocSelector<SearchBloc, SearchState, SearchModel?>(selector: (state) => state.searchModelObj, builder: (context, searchModelObj) {return ListView.separated(padding: getPadding(left: 24, top: 24), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(12));}, itemCount: searchModelObj?.listsizemediumtypefItemList.length ?? 0, itemBuilder: (context, index) {ListsizemediumtypefItemModel model = searchModelObj?.listsizemediumtypefItemList[index] ?? ListsizemediumtypefItemModel(); return ListsizemediumtypefItemWidget(model);});}))), Padding(padding: getPadding(left: 24, top: 24, right: 24), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 2, bottom: 3), child: Text("msg_recommended_58".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold18)), CustomImageView(svgPath: ImageConstant.imgMenu28x68, height: getVerticalSize(28), width: getHorizontalSize(68))])), Padding(padding: getPadding(left: 24, top: 22, right: 24), child: BlocSelector<SearchBloc, SearchState, SearchModel?>(selector: (state) => state.searchModelObj, builder: (context, searchModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(24));}, itemCount: searchModelObj?.listrectanglefour2ItemList.length ?? 0, itemBuilder: (context, index) {Listrectanglefour2ItemModel model = searchModelObj?.listrectanglefour2ItemList[index] ?? Listrectanglefour2ItemModel(); return Listrectanglefour2ItemWidget(model, onTapRowrectanglefour: () {onTapRowrectanglefour(context);});});}))])])))); } 
onTapRowrectanglefour(BuildContext context) { NavigatorService.pushNamed(AppRoutes.hotelDetailsScreen, ); } 
 }
