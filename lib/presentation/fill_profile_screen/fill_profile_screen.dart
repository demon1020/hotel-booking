import 'bloc/fill_profile_bloc.dart';import 'models/fill_profile_model.dart';import 'package:baburam_s_application5/core/app_export.dart';import 'package:baburam_s_application5/widgets/app_bar/appbar_image.dart';import 'package:baburam_s_application5/widgets/app_bar/appbar_title.dart';import 'package:baburam_s_application5/widgets/app_bar/custom_app_bar.dart';import 'package:baburam_s_application5/widgets/custom_button.dart';import 'package:baburam_s_application5/widgets/custom_drop_down.dart';import 'package:baburam_s_application5/widgets/custom_phone_number.dart';import 'package:baburam_s_application5/widgets/custom_text_form_field.dart';import 'package:country_pickers/country.dart';import 'package:country_pickers/country_pickers.dart';import 'package:flutter/material.dart';import 'package:fluttertoast/fluttertoast.dart';class FillProfileScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<FillProfileBloc>(create: (context) => FillProfileBloc(FillProfileState(fillProfileModelObj: FillProfileModel()))..add(FillProfileInitialEvent()), child: FillProfileScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray900, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(48), leadingWidth: 52, leading: AppbarImage(height: getSize(28), width: getSize(28), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 24, top: 11, bottom: 9), onTap: () {onTapArrowleft(context);}), centerTitle: true, title: AppbarTitle(text: "msg_fill_your_profi".tr)), body: Container(width: double.maxFinite, padding: getPadding(left: 24, top: 44, right: 24, bottom: 44), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [GestureDetector(onTap: () {onTapAvtar(context);}, child: Container(height: getSize(140), width: getSize(140), child: Stack(alignment: Alignment.bottomRight, children: [CustomImageView(imagePath: ImageConstant.imgEllipse140x140, height: getSize(140), width: getSize(140), radius: BorderRadius.circular(getHorizontalSize(70)), alignment: Alignment.center), CustomImageView(svgPath: ImageConstant.imgEdit, height: getSize(35), width: getSize(35), alignment: Alignment.bottomRight)]))), BlocSelector<FillProfileBloc, FillProfileState, TextEditingController?>(selector: (state) => state.fullnameController, builder: (context, fullnameController) {return CustomTextFormField(focusNode: FocusNode(), controller: fullnameController, hintText: "lbl_full_name".tr, margin: getMargin(top: 24), fontStyle: TextFormFieldFontStyle.UrbanistRegular14Gray500);}), BlocSelector<FillProfileBloc, FillProfileState, TextEditingController?>(selector: (state) => state.nicknameController, builder: (context, nicknameController) {return CustomTextFormField(focusNode: FocusNode(), controller: nicknameController, hintText: "lbl_nickname".tr, margin: getMargin(top: 24), fontStyle: TextFormFieldFontStyle.UrbanistRegular14Gray500);}), BlocSelector<FillProfileBloc, FillProfileState, TextEditingController?>(selector: (state) => state.dateofbirthController, builder: (context, dateofbirthController) {return CustomTextFormField(focusNode: FocusNode(), controller: dateofbirthController, hintText: "lbl_date_of_birth".tr, margin: getMargin(top: 24), padding: TextFormFieldPadding.PaddingT19, fontStyle: TextFormFieldFontStyle.UrbanistRegular14Gray500, suffix: Container(margin: getMargin(left: 30, top: 18, right: 20, bottom: 18), child: CustomImageView(svgPath: ImageConstant.imgCalendar)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(56)));}), BlocSelector<FillProfileBloc, FillProfileState, TextEditingController?>(selector: (state) => state.emailController, builder: (context, emailController) {return CustomTextFormField(focusNode: FocusNode(), controller: emailController, hintText: "lbl_email".tr, margin: getMargin(top: 24), padding: TextFormFieldPadding.PaddingT19, fontStyle: TextFormFieldFontStyle.UrbanistRegular14Gray500, textInputType: TextInputType.emailAddress, suffix: Container(margin: getMargin(left: 30, top: 20, right: 22, bottom: 20), decoration: BoxDecoration(border: Border.all(color: ColorConstant.gray500, width: getHorizontalSize(1), strokeAlign: strokeAlignCenter)), child: CustomImageView(svgPath: ImageConstant.imgCheckmarkGray500)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(56)));}), Padding(padding: getPadding(top: 24), child: BlocBuilder<FillProfileBloc, FillProfileState>(builder: (context, state) {return CustomPhoneNumber(country: state.selectedCountry ?? CountryPickerUtils.getCountryByPhoneCode('1'), controller: state.phoneNumberController, onTap: (Country country) {context.read<FillProfileBloc>().add(ChangeCountryEvent(value: country));});})), BlocSelector<FillProfileBloc, FillProfileState, FillProfileModel?>(selector: (state) => state.fillProfileModelObj, builder: (context, fillProfileModelObj) {return CustomDropDown(focusNode: FocusNode(), icon: Container(margin: getMargin(left: 30, right: 20), child: CustomImageView(svgPath: ImageConstant.imgFavorite)), hintText: "lbl_gender".tr, margin: getMargin(top: 24, bottom: 5), fontStyle: DropDownFontStyle.UrbanistRegular14, items: fillProfileModelObj?.dropdownItemList ?? [], onChanged: (value) {context.read<FillProfileBloc>().add(ChangeDropDownEvent(value: value));});})])), bottomNavigationBar: CustomButton(height: getVerticalSize(55), text: "lbl_continue".tr, margin: getMargin(left: 24, right: 24, bottom: 51), variant: ButtonVariant.FillCyan600, onTap: () {onTapContinue(context);}))); } 
onTapAvtar(BuildContext context) async  { await PermissionManager.askForPermission(Permission.camera);await PermissionManager.askForPermission(Permission.storage);List<String?>? imageList = [];await FileManager().showModelSheetForImage(getImages: (value) async {imageList = value;}); } 
onTapContinue(BuildContext context) { context.read<FillProfileBloc>().add(CreateRegisterEvent(onCreateRegisterEventSuccess: () {

_onCreateRegisterEventSuccess(context);
},onCreateRegisterEventError: () {

_onCreateRegisterEventError(context);
},),);
 } 
void _onCreateRegisterEventSuccess(BuildContext context) { NavigatorService.pushNamedAndRemoveUntil(AppRoutes.homeScreenContainerScreen, arguments: {NavigationArgs.id: context.read<FillProfileBloc>().postRegisterResp.data!.id!}); } 
void _onCreateRegisterEventError(BuildContext context) { 
Fluttertoast.showToast(msg: context.read<FillProfileBloc>().postRegisterResp.message!.toString(),); } 
onTapArrowleft(BuildContext context) { NavigatorService.goBack(); } 
 }
