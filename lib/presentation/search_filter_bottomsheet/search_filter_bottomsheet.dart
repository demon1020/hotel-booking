import '../search_filter_bottomsheet/widgets/listcountry_item_widget.dart';import '../search_filter_bottomsheet/widgets/listsizemediumtypef2_item_widget.dart';import '../search_filter_bottomsheet/widgets/liststar_item_widget.dart';import 'bloc/search_filter_bloc.dart';import 'models/listcountry_item_model.dart';import 'models/listsizemediumtypef2_item_model.dart';import 'models/liststar_item_model.dart';import 'models/search_filter_model.dart';import 'package:baburam_s_application5/core/app_export.dart';import 'package:baburam_s_application5/widgets/custom_button.dart';import 'package:baburam_s_application5/widgets/custom_checkbox.dart';import 'package:flutter/material.dart';class SearchFilterBottomsheet extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<SearchFilterBloc>(create: (context) => SearchFilterBloc(SearchFilterState(searchFilterModelObj: SearchFilterModel()))..add(SearchFilterInitialEvent()), child: SearchFilterBottomsheet()); } 
@override Widget build(BuildContext context) { return SingleChildScrollView(child: Container(width: double.maxFinite, child: Container(width: double.maxFinite, padding: getPadding(top: 8, bottom: 8), decoration: AppDecoration.outlineGray8002.copyWith(borderRadius: BorderRadiusStyle.customBorderTL40), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgFrameGray700, height: getVerticalSize(3), width: getHorizontalSize(38)), Padding(padding: getPadding(top: 23), child: Text("lbl_filter_hotel".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold24)), Padding(padding: getPadding(left: 24, top: 49, right: 24), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("lbl_country".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold18), Padding(padding: getPadding(bottom: 2), child: Text("lbl_see_all".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold16Cyan60001.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Align(alignment: Alignment.centerRight, child: Container(height: getVerticalSize(56), child: BlocSelector<SearchFilterBloc, SearchFilterState, SearchFilterModel?>(selector: (state) => state.searchFilterModelObj, builder: (context, searchFilterModelObj) {return ListView.separated(padding: getPadding(left: 24, top: 18), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(12));}, itemCount: searchFilterModelObj?.listcountryItemList.length ?? 0, itemBuilder: (context, index) {ListcountryItemModel model = searchFilterModelObj?.listcountryItemList[index] ?? ListcountryItemModel(); return ListcountryItemWidget(model);});}))), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 24, top: 23), child: Text("lbl_sort_results".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold18))), Align(alignment: Alignment.centerRight, child: Container(height: getVerticalSize(58), child: BlocSelector<SearchFilterBloc, SearchFilterState, SearchFilterModel?>(selector: (state) => state.searchFilterModelObj, builder: (context, searchFilterModelObj) {return ListView.separated(padding: getPadding(left: 24, top: 20), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(12));}, itemCount: searchFilterModelObj?.listsizemediumtypef2ItemList.length ?? 0, itemBuilder: (context, index) {Listsizemediumtypef2ItemModel model = searchFilterModelObj?.listsizemediumtypef2ItemList[index] ?? Listsizemediumtypef2ItemModel(); return Listsizemediumtypef2ItemWidget(model);});}))), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 24, top: 25), child: Text("msg_price_range_per".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold18))), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 78, top: 18), child: Row(children: [Container(height: getVerticalSize(24), width: getHorizontalSize(36), child: Stack(alignment: Alignment.topLeft, children: [CustomImageView(svgPath: ImageConstant.imgMail, height: getVerticalSize(24), width: getHorizontalSize(36), alignment: Alignment.center), Align(alignment: Alignment.topLeft, child: Padding(padding: getPadding(left: 5, top: 1), child: Text("lbl_182".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtSourceSansProSemiBold14)))])), Container(height: getVerticalSize(24), width: getHorizontalSize(36), margin: getMargin(left: 83), child: Stack(alignment: Alignment.topLeft, children: [CustomImageView(svgPath: ImageConstant.imgMail, height: getVerticalSize(24), width: getHorizontalSize(36), alignment: Alignment.center), Align(alignment: Alignment.topLeft, child: Padding(padding: getPadding(left: 5, top: 1), child: Text("lbl_50".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtSourceSansProSemiBold14)))]))]))), Padding(padding: getPadding(left: 24, top: 2, right: 24), child: SliderTheme(data: SliderThemeData(trackShape: RoundedRectSliderTrackShape(), activeTrackColor: ColorConstant.cyan600, inactiveTrackColor: ColorConstant.gray700, thumbColor: ColorConstant.gray800, thumbShape: RoundSliderThumbShape()), child: RangeSlider(values: RangeValues(0, 0), min: 0.0, max: 100.0, onChanged: (value) {}))), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 24, top: 25), child: Text("lbl_star_rating".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold18))), Align(alignment: Alignment.centerRight, child: Container(height: getVerticalSize(56), child: BlocSelector<SearchFilterBloc, SearchFilterState, SearchFilterModel?>(selector: (state) => state.searchFilterModelObj, builder: (context, searchFilterModelObj) {return ListView.separated(padding: getPadding(left: 24, top: 18), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(12));}, itemCount: searchFilterModelObj?.liststarItemList.length ?? 0, itemBuilder: (context, index) {ListstarItemModel model = searchFilterModelObj?.liststarItemList[index] ?? ListstarItemModel(); return ListstarItemWidget(model);});}))), Padding(padding: getPadding(left: 24, top: 23, right: 24), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("lbl_facilities".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold18), Padding(padding: getPadding(top: 1), child: Text("lbl_see_all".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold16Cyan60001.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 24, top: 20, right: 99), child: Row(children: [BlocSelector<SearchFilterBloc, SearchFilterState, bool?>(selector: (state) => state.isCheckbox, builder: (context, isCheckbox) {return CustomCheckbox(text: "lbl_wifi".tr, value: isCheckbox, fontStyle: CheckboxFontStyle.UrbanistSemiBold14WhiteA700, onChange: (value) {context.read<SearchFilterBloc>().add(ChangeCheckBoxEvent(value: value));});}), BlocSelector<SearchFilterBloc, SearchFilterState, bool?>(selector: (state) => state.isCheckbox1, builder: (context, isCheckbox1) {return CustomCheckbox(text: "lbl_swimming_pool".tr, value: isCheckbox1, margin: getMargin(left: 12), fontStyle: CheckboxFontStyle.UrbanistSemiBold14WhiteA700, onChange: (value) {context.read<SearchFilterBloc>().add(ChangeCheckBox1Event(value: value));});}), BlocSelector<SearchFilterBloc, SearchFilterState, bool?>(selector: (state) => state.isCheckbox2, builder: (context, isCheckbox2) {return CustomCheckbox(text: "lbl_parking".tr, iconSize: getHorizontalSize(24), value: isCheckbox2, margin: getMargin(left: 12), fontStyle: CheckboxFontStyle.UrbanistSemiBold14WhiteA700, onChange: (value) {context.read<SearchFilterBloc>().add(ChangeCheckBox2Event(value: value));});})]))), Padding(padding: getPadding(left: 24, top: 25, right: 24), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("msg_accommodation_t".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold18), Padding(padding: getPadding(bottom: 2), child: Text("lbl_see_all".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold16Cyan60001.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 24, top: 18), child: Row(children: [BlocSelector<SearchFilterBloc, SearchFilterState, bool?>(selector: (state) => state.isCheckbox3, builder: (context, isCheckbox3) {return CustomCheckbox(text: "lbl_hotels".tr, value: isCheckbox3, fontStyle: CheckboxFontStyle.UrbanistSemiBold14WhiteA700, onChange: (value) {context.read<SearchFilterBloc>().add(ChangeCheckBox3Event(value: value));});}), BlocSelector<SearchFilterBloc, SearchFilterState, bool?>(selector: (state) => state.isCheckbox4, builder: (context, isCheckbox4) {return CustomCheckbox(text: "lbl_resorts".tr, iconSize: getHorizontalSize(24), value: isCheckbox4, margin: getMargin(left: 12), fontStyle: CheckboxFontStyle.UrbanistSemiBold14WhiteA700, onChange: (value) {context.read<SearchFilterBloc>().add(ChangeCheckBox4Event(value: value));});}), BlocSelector<SearchFilterBloc, SearchFilterState, bool?>(selector: (state) => state.isCheckbox5, builder: (context, isCheckbox5) {return CustomCheckbox(text: "lbl_villas".tr, value: isCheckbox5, margin: getMargin(left: 12), fontStyle: CheckboxFontStyle.UrbanistSemiBold14WhiteA700, onChange: (value) {context.read<SearchFilterBloc>().add(ChangeCheckBox5Event(value: value));});})]))), Padding(padding: getPadding(left: 21, top: 48, right: 24, bottom: 40), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomButton(height: getVerticalSize(58), width: getHorizontalSize(184), text: "lbl_reset".tr, variant: ButtonVariant.FillGray800), CustomButton(height: getVerticalSize(58), width: getHorizontalSize(184), text: "lbl_apply_filter".tr, margin: getMargin(left: 12), variant: ButtonVariant.OutlineGreenA7003f, onTap: () {onTapApplyfilter(context);})]))])))); } 
onTapApplyfilter(BuildContext context) { NavigatorService.pushNamed(AppRoutes.filterResultScreen, ); } 
 }
