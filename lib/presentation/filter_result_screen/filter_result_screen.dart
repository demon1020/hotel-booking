import '../filter_result_screen/widgets/listrectanglefour3_item_widget.dart';import '../filter_result_screen/widgets/listsizemediumtypef3_item_widget.dart';import 'bloc/filter_result_bloc.dart';import 'models/filter_result_model.dart';import 'models/listrectanglefour3_item_model.dart';import 'models/listsizemediumtypef3_item_model.dart';import 'package:baburam_s_application5/core/app_export.dart';import 'package:baburam_s_application5/widgets/custom_search_view.dart';import 'package:flutter/material.dart';class FilterResultScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<FilterResultBloc>(create: (context) => FilterResultBloc(FilterResultState(filterResultModelObj: FilterResultModel()))..add(FilterResultInitialEvent()), child: FilterResultScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray900, resizeToAvoidBottomInset: false, body: Container(width: double.maxFinite, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [BlocSelector<FilterResultBloc, FilterResultState, TextEditingController?>(selector: (state) => state.searchbarController, builder: (context, searchbarController) {return CustomSearchView(focusNode: FocusNode(), controller: searchbarController, hintText: "lbl_hotel".tr, margin: getMargin(left: 24, top: 24, right: 24), fontStyle: SearchViewFontStyle.UrbanistSemiBold14WhiteA700, prefix: Container(margin: getMargin(left: 20, top: 18, right: 12, bottom: 18), child: CustomImageView(svgPath: ImageConstant.imgSearch)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(56)), suffix: Container(margin: getMargin(left: 30, top: 18, right: 20, bottom: 18), child: CustomImageView(svgPath: ImageConstant.imgCalculator)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(56)));}), Align(alignment: Alignment.centerRight, child: Container(height: getVerticalSize(62), child: BlocSelector<FilterResultBloc, FilterResultState, FilterResultModel?>(selector: (state) => state.filterResultModelObj, builder: (context, filterResultModelObj) {return ListView.separated(padding: getPadding(left: 24, top: 24), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(12));}, itemCount: filterResultModelObj?.listsizemediumtypef3ItemList.length ?? 0, itemBuilder: (context, index) {Listsizemediumtypef3ItemModel model = filterResultModelObj?.listsizemediumtypef3ItemList[index] ?? Listsizemediumtypef3ItemModel(); return Listsizemediumtypef3ItemWidget(model);});}))), Container(height: getVerticalSize(716), width: double.maxFinite, margin: getMargin(top: 24), child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.topCenter, child: Padding(padding: getPadding(left: 24, right: 24), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 2, bottom: 3), child: Text("msg_recommended_58".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold18)), CustomImageView(svgPath: ImageConstant.imgMenu28x68, height: getVerticalSize(28), width: getHorizontalSize(68))]), Padding(padding: getPadding(top: 22), child: BlocSelector<FilterResultBloc, FilterResultState, FilterResultModel?>(selector: (state) => state.filterResultModelObj, builder: (context, filterResultModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(24));}, itemCount: filterResultModelObj?.listrectanglefour3ItemList.length ?? 0, itemBuilder: (context, index) {Listrectanglefour3ItemModel model = filterResultModelObj?.listrectanglefour3ItemList[index] ?? Listrectanglefour3ItemModel(); return Listrectanglefour3ItemWidget(model, onTapRowrectanglefour: () {onTapRowrectanglefour(context);});});}))]))), Align(alignment: Alignment.bottomCenter, child: Container(height: getVerticalSize(90), width: double.maxFinite, decoration: BoxDecoration(color: ColorConstant.gray900D8, borderRadius: BorderRadius.only(topLeft: Radius.circular(getHorizontalSize(16)), topRight: Radius.circular(getHorizontalSize(16))))))]))])))); } 
onTapRowrectanglefour(BuildContext context) { NavigatorService.pushNamed(AppRoutes.hotelDetailsScreen, ); } 
 }
