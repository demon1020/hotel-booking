import '../my_bookmarks_screen/widgets/my_bookmarks_item_widget.dart';import 'bloc/my_bookmarks_bloc.dart';import 'models/my_bookmarks_item_model.dart';import 'models/my_bookmarks_model.dart';import 'package:baburam_s_application5/core/app_export.dart';import 'package:baburam_s_application5/widgets/app_bar/appbar_image.dart';import 'package:baburam_s_application5/widgets/app_bar/appbar_title.dart';import 'package:baburam_s_application5/widgets/app_bar/custom_app_bar.dart';import 'package:flutter/material.dart';import 'package:baburam_s_application5/presentation/bookmark_removal_bottomsheet/bookmark_removal_bottomsheet.dart';class MyBookmarksScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<MyBookmarksBloc>(create: (context) => MyBookmarksBloc(MyBookmarksState(myBookmarksModelObj: MyBookmarksModel()))..add(MyBookmarksInitialEvent()), child: MyBookmarksScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray900, appBar: CustomAppBar(height: getVerticalSize(51), leadingWidth: 52, leading: AppbarImage(height: getSize(28), width: getSize(28), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 24, top: 10, bottom: 13), onTap: () {onTapArrowleft7(context);}), title: AppbarTitle(text: "lbl_my_bookmarks".tr, margin: getMargin(left: 16)), actions: [AppbarImage(height: getSize(28), width: getSize(28), svgPath: ImageConstant.imgMenu1, margin: getMargin(left: 24, top: 10, right: 13)), AppbarImage(height: getSize(28), width: getSize(28), svgPath: ImageConstant.imgGrid, margin: getMargin(left: 20, top: 10, right: 37))]), body: Padding(padding: getPadding(left: 24, top: 28, right: 24), child: BlocSelector<MyBookmarksBloc, MyBookmarksState, MyBookmarksModel?>(selector: (state) => state.myBookmarksModelObj, builder: (context, myBookmarksModelObj) {return GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: getVerticalSize(281), crossAxisCount: 2, mainAxisSpacing: getHorizontalSize(24), crossAxisSpacing: getHorizontalSize(24)), physics: NeverScrollableScrollPhysics(), itemCount: myBookmarksModelObj?.myBookmarksItemList.length ?? 0, itemBuilder: (context, index) {MyBookmarksItemModel model = myBookmarksModelObj?.myBookmarksItemList[index] ?? MyBookmarksItemModel(); return MyBookmarksItemWidget(model, onTapImgBookmark: () {onTapImgBookmark(context);});});})))); } 
onTapImgBookmark(BuildContext context) { showModalBottomSheet(context: context, builder: (_) => BookmarkRemovalBottomsheet.builder(context), isScrollControlled: true); } 
onTapArrowleft7(BuildContext context) { NavigatorService.goBack(); } 
 }
