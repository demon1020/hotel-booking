import '../booking_ongoing_page/widgets/listrectangle_item_widget.dart';import 'bloc/booking_ongoing_bloc.dart';import 'models/booking_ongoing_model.dart';import 'models/listrectangle_item_model.dart';import 'package:baburam_s_application5/core/app_export.dart';import 'package:flutter/material.dart';import 'package:baburam_s_application5/presentation/cancel_booking_bottomsheet/cancel_booking_bottomsheet.dart';class BookingOngoingPage extends StatefulWidget {@override _BookingOngoingPageState createState() =>  _BookingOngoingPageState();
static Widget builder(BuildContext context) { return BlocProvider<BookingOngoingBloc>(create: (context) => BookingOngoingBloc(BookingOngoingState(bookingOngoingModelObj: BookingOngoingModel()))..add(BookingOngoingInitialEvent()), child: BookingOngoingPage()); } 
onTapCancelbooking(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>CancelBookingBottomsheet.builder(context),isScrollControlled: true); } 
onTapViewticket(BuildContext context) { NavigatorService.pushNamed(AppRoutes.viewTicketScreen, ); } 
 }
class _BookingOngoingPageState extends State<BookingOngoingPage> with  AutomaticKeepAliveClientMixin<BookingOngoingPage> {@override bool get wantKeepAlive =>  true;
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: Colors.transparent, body: Container(width: double.maxFinite, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 24, top: 30, right: 24), child: BlocSelector<BookingOngoingBloc, BookingOngoingState, BookingOngoingModel?>(selector: (state) => state.bookingOngoingModelObj, builder: (context, bookingOngoingModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(20));}, itemCount: bookingOngoingModelObj?.listrectangleItemList.length ?? 0, itemBuilder: (context, index) {ListrectangleItemModel model = bookingOngoingModelObj?.listrectangleItemList[index] ?? ListrectangleItemModel(); return ListrectangleItemWidget(model, onTapCancelbooking: () {onTapCancelbooking(context);}, onTapViewticket: () {onTapViewticket(context);});});}))])))); } 
onTapCancelbooking(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>CancelBookingBottomsheet.builder(context),isScrollControlled: true); } 
onTapViewticket(BuildContext context) { NavigatorService.pushNamed(AppRoutes.viewTicketScreen, ); } 
 }
